name: Django Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


env:
  PYTHON_VERSION: '3.13'


jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests

    services:
      postgres:
        image: postgres:17.5
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ vars.DB_USER }}
          POSTGRES_NAME: ${{ vars.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with dev

    - name: Run Tests
      run: |
        cd src
        poetry run python manage.py test
      env:
        DB_NAME: ${{ vars.DB_NAME }}
        DB_HOST: ${{ vars.DB_HOST }}
        DB_PORT: ${{ vars.DB_PORT }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USER: ${{ vars.DB_USER }}