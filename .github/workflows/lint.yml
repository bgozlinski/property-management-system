name: Lint

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


env:
  PYTHON_VERSION: '3.13'


jobs:
  lint:
    runs-on: ubuntu-latest
    name: Code Quality & Linting

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true



    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with dev

    - name: Run mypy
      run: poetry run mypy src
      continue-on-error: true

    - name: Run Bandit
      run: |
        poetry run bandit -r . -c pyproject.toml
    - name: Run Safety
      run: |
        poetry run safety check
      continue-on-error: true
    - name: Run Ruff
      run: |
        poetry run ruff check .


