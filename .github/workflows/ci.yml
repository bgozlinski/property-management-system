name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pms_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d pms_test" 
          --health-interval=10s --health-timeout=5s --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s --health-timeout=5s --health-retries=5

    env:
      # Django
      DJANGO_SETTINGS_MODULE: core.settings
      SECRET_KEY: test-secret
      DEBUG: "1"
      # Database (pick your own scheme; or use separate DB_* vars if your settings expect those)
      DB_NAME: pms_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: "5432"
      # Celery
      REDIS_HOST: localhost
      CELERY_BROKER_URL: redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/0
      # Mark we are in CI (if you use this flag in settings)
      CI: "true"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.3"

      - name: Configure Poetry to avoid creating virtualenvs (optional)
        run: poetry config virtualenvs.create true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run tests
        run: |
          cd src
          poetry run python manage.py test