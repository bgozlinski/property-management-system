services:
  app:
    container_name: app
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=db
    command: >
      sh -c "cd src && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
  db:
    container_name: db
    restart: unless-stopped
    image: postgres:17.5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    container_name: redis
    image: redis:8.2.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  celery:
    container_name: celery
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - PYTHONPATH=/app/src
    command: sh -c "cd src && celery -A core worker -l info"
  celery-beat:
    container_name: celery-beat
    restart: unless-stopped
    build:
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - PYTHONPATH=/app/src
    command: sh -c "cd src && celery -A core beat -l info"
  flower:
    container_name: flower
    restart: unless-stopped
    build: .
    command: celery -A core flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - celery
      - redis
    environment:
      - REDIS_HOST=redis
      - PYTHONPATH=/app/src


volumes:
  postgres_data:
  redis_data: